#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Oct 25, 2018 12:52:52 PM +1100  platform: Windows NT

import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import GUI_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    GUI_support.set_Tk_var()
    top = New_Toplevel (root)
    GUI_support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    GUI_support.set_Tk_var()
    top = New_Toplevel (w)
    GUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("1920x1001+398+-6")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.Frame1 = Frame(top)
        self.Frame1.place(relx=0.005, rely=0.02, relheight=0.974, relwidth=0.987)

        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background="#d9d9d9")
        self.Frame1.configure(highlightbackground="#d9d9d9")
        self.Frame1.configure(highlightcolor="black")
        self.Frame1.configure(width=1895)

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(self.Frame1)
        self.TNotebook1.place(relx=0.005, rely=0.0, relheight=0.975
                , relwidth=0.989)
        self.TNotebook1.configure(width=1874)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="Overview",compound="left",underline="-1",)
        self.TNotebook1_t0.configure(background="#d9d9d9")
        self.TNotebook1_t0.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t0.configure(highlightcolor="black")
        self.TNotebook1_t1 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Eye Tracker", compound="left", underline="-1"
                ,)
        self.TNotebook1_t1.configure(background="#d9d9d9")
        self.TNotebook1_t1.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t1.configure(highlightcolor="black")
        self.TNotebook1_t2 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2, padding=3)
        self.TNotebook1.tab(2, text="Thermal Camera", compound="none"
                ,underline="-1", )
        self.TNotebook1_t2.configure(background="#d9d9d9")
        self.TNotebook1_t2.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t2.configure(highlightcolor="black")
        self.TNotebook1_t3 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t3, padding=3)
        self.TNotebook1.tab(3, text="EDA",compound="none",underline="-1",)
        self.TNotebook1_t3.configure(background="#d9d9d9")
        self.TNotebook1_t3.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t3.configure(highlightcolor="black")
        self.TNotebook1_t4 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t4, padding=3)
        self.TNotebook1.tab(4, text="Input Logs", compound="none", underline="-1"
                ,)
        self.TNotebook1_t4.configure(background="#d9d9d9")
        self.TNotebook1_t4.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t4.configure(highlightcolor="black")
        self.TNotebook1_t5 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t5, padding=3)
        self.TNotebook1.tab(5, text="Application Logs", compound="none"
                ,underline="-1", )
        self.TNotebook1_t5.configure(background="#d9d9d9")
        self.TNotebook1_t5.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t5.configure(highlightcolor="black")
        self.TNotebook1_t6 = Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t6, padding=3)
        self.TNotebook1.tab(6, text="Emotion",compound="none",underline="-1",)
        self.TNotebook1_t6.configure(background="#d9d9d9")
        self.TNotebook1_t6.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t6.configure(highlightcolor="black")

        self.TFrame1 = ttk.Frame(self.TNotebook1_t0)
        self.TFrame1.place(relx=0.005, rely=0.011, relheight=0.962
                , relwidth=0.981)
        self.TFrame1.configure(relief=RIDGE)
        self.TFrame1.configure(borderwidth="2")
        self.TFrame1.configure(relief=RIDGE)
        self.TFrame1.configure(width=1835)

        self.TScale1 = ttk.Scale(self.TFrame1)
        self.TScale1.place(relx=0.632, rely=0.181, relwidth=0.332, relheight=0.0
                , height=26, bordermode='ignore')
        self.TScale1.configure(variable=GUI_support.Eng_Slider)
        self.TScale1.configure(to="127")
        self.TScale1.configure(value="56")
        self.TScale1.configure(length="610")
        self.TScale1.configure(takefocus="")
        self.TScale1.configure(cursor="X_cursor")

        self.TScale1 = ttk.Scale(self.TFrame1)
        self.TScale1.place(relx=0.632, rely=0.373, relwidth=0.338, relheight=0.0
                , height=26, bordermode='ignore')
        self.TScale1.configure(variable=GUI_support.ch_slider)
        self.TScale1.configure(to="127")
        self.TScale1.configure(value="38")
        self.TScale1.configure(takefocus="")

        self.TLabel1 = ttk.Label(self.TFrame1)
        self.TLabel1.place(relx=0.632, rely=0.079, height=54, width=175)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Engagement Level''')

        self.TLabel1 = ttk.Label(self.TFrame1)
        self.TLabel1.place(relx=0.632, rely=0.271, height=54, width=175)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Challenge Level''')

        self.Text1 = Text(self.TFrame1)
        self.Text1.place(relx=0.627, rely=0.599, relheight=0.163, relwidth=0.335)

        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(width=614)
        self.Text1.configure(wrap=WORD)

        self.distraction_label = Label(self.TFrame1)
        self.distraction_label.place(relx=0.61, rely=0.508, height=66, width=172)

        self.distraction_label.configure(activebackground="#f9f9f9")
        self.distraction_label.configure(activeforeground="black")
        self.distraction_label.configure(background="#d9d9d9")
        self.distraction_label.configure(disabledforeground="#a3a3a3")
        self.distraction_label.configure(foreground="#000000")
        self.distraction_label.configure(highlightbackground="#d9d9d9")
        self.distraction_label.configure(highlightcolor="black")
        self.distraction_label.configure(text='''Last Distractions''')

        self.start = Button(self.TFrame1)
        self.start.place(relx=0.392, rely=0.915, height=33, width=173)
        self.start.configure(activebackground="#d9d9d9")
        self.start.configure(activeforeground="#000000")
        self.start.configure(background="#d9d9d9")
        self.start.configure(disabledforeground="#a3a3a3")
        self.start.configure(foreground="#000000")
        self.start.configure(highlightbackground="#d9d9d9")
        self.start.configure(highlightcolor="black")
        self.start.configure(pady="0")
        self.start.configure(text='''Start''')
        self.start.configure(width=173)

        self.pause = Button(self.TFrame1)
        self.pause.place(relx=0.507, rely=0.915, height=33, width=163)
        self.pause.configure(activebackground="#d9d9d9")
        self.pause.configure(activeforeground="#000000")
        self.pause.configure(background="#d9d9d9")
        self.pause.configure(disabledforeground="#a3a3a3")
        self.pause.configure(foreground="#000000")
        self.pause.configure(highlightbackground="#d9d9d9")
        self.pause.configure(highlightcolor="black")
        self.pause.configure(pady="0")
        self.pause.configure(text='''Pause''')
        self.pause.configure(width=163)

        self.stop = Button(self.TFrame1)
        self.stop.place(relx=0.616, rely=0.915, height=33, width=173)
        self.stop.configure(activebackground="#d9d9d9")
        self.stop.configure(activeforeground="#000000")
        self.stop.configure(background="#d9d9d9")
        self.stop.configure(disabledforeground="#a3a3a3")
        self.stop.configure(foreground="#000000")
        self.stop.configure(highlightbackground="#d9d9d9")
        self.stop.configure(highlightcolor="black")
        self.stop.configure(pady="0")
        self.stop.configure(text='''Stop''')
        self.stop.configure(width=173)

        self.TLabel1 = ttk.Label(self.TFrame1)
        self.TLabel1.place(relx=0.033, rely=0.079, height=54, width=175)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Eye Tracker''')

        self.TLabel1 = ttk.Label(self.TFrame1)
        self.TLabel1.place(relx=0.027, rely=0.463, height=54, width=175)
        self.TLabel1.configure(background="#d9d9d9")
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(font="TkDefaultFont")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''Emotion''')

        self.eye_text = Text(self.TFrame1)
        self.eye_text.place(relx=0.033, rely=0.158, relheight=0.287
                , relwidth=0.335)
        self.eye_text.configure(background="white")
        self.eye_text.configure(font="TkTextFont")
        self.eye_text.configure(foreground="black")
        self.eye_text.configure(highlightbackground="#d9d9d9")
        self.eye_text.configure(highlightcolor="black")
        self.eye_text.configure(insertbackground="black")
        self.eye_text.configure(selectbackground="#c4c4c4")
        self.eye_text.configure(selectforeground="black")
        self.eye_text.configure(width=614)
        self.eye_text.configure(wrap=WORD)

        self.emotio_text = Text(self.TFrame1)
        self.emotio_text.place(relx=0.033, rely=0.554, relheight=0.321
                , relwidth=0.335)
        self.emotio_text.configure(background="white")
        self.emotio_text.configure(font="TkTextFont")
        self.emotio_text.configure(foreground="black")
        self.emotio_text.configure(highlightbackground="#d9d9d9")
        self.emotio_text.configure(highlightcolor="black")
        self.emotio_text.configure(insertbackground="black")
        self.emotio_text.configure(selectbackground="#c4c4c4")
        self.emotio_text.configure(selectforeground="black")
        self.emotio_text.configure(width=614)
        self.emotio_text.configure(wrap=WORD)






if __name__ == '__main__':
    vp_start_gui()



